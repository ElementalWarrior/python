{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Overview","text":"mkdocstrings-python <p>A Python handler for mkdocstrings.</p> <p> </p> <p></p>"},{"location":"#installation","title":"Installation","text":"<p>You can install this handler as a mkdocstrings extra:</p> pyproject.toml<pre><code># PEP 621 dependencies declaration\n# adapt to your dependencies manager\n[project]\ndependencies = [\n\"mkdocstrings[python]&gt;=0.18\",\n]\n</code></pre> <p>You can also explicitly depend on the handler:</p> pyproject.toml<pre><code># PEP 621 dependencies declaration\n# adapt to your dependencies manager\n[project]\ndependencies = [\n\"mkdocstrings-python\",\n]\n</code></pre>"},{"location":"#preview","title":"Preview","text":""},{"location":"#features","title":"Features","text":"<ul> <li> <p>Data collection from source code: collection of the object-tree and the docstrings is done thanks to   Griffe.</p> </li> <li> <p>Support for type annotations: Griffe collects your type annotations and mkdocstrings uses them   to display parameter types or return types. It is even able to automatically add cross-references   to other objects from your API, from the standard library or third-party libraries!   See how to load inventories to enable it.</p> </li> <li> <p>Recursive documentation of Python objects: just use the module dotted-path as an identifier, and you get the full   module docs. You don't need to inject documentation for each class, function, etc.</p> </li> <li> <p>Support for documented attributes: attributes (variables) followed by a docstring (triple-quoted string) will   be recognized by Griffe in modules, classes and even in <code>__init__</code> methods.</p> </li> <li> <p>Multiple docstring-styles support: common support for Google-style, Numpydoc-style,   and Sphinx-style docstrings. See Griffe's documentation on docstrings support.</p> </li> <li> <p>Admonition support in Google docstrings: blocks like <code>Note:</code> or <code>Warning:</code> will be transformed   to their admonition equivalent.   We do not support nested admonitions in docstrings!</p> </li> <li> <p>Every object has a TOC entry: we render a heading for each object, meaning MkDocs picks them into the Table   of Contents, which is nicely displayed by the Material theme. Thanks to mkdocstrings cross-reference ability,   you can reference other objects within your docstrings, with the classic Markdown syntax:   <code>[this object][package.module.object]</code> or directly with <code>[package.module.object][]</code></p> </li> <li> <p>Source code display: mkdocstrings can add a collapsible div containing the highlighted source code   of the Python object.</p> </li> </ul>"},{"location":"changelog/","title":"Changelog","text":"<p>All notable changes to this project will be documented in this file.</p> <p>The format is based on Keep a Changelog and this project adheres to Semantic Versioning.</p>"},{"location":"changelog/#090-2023-04-03","title":"0.9.0 - 2023-04-03","text":"<p>Compare with 0.8.3</p>"},{"location":"changelog/#features","title":"Features","text":"<ul> <li>Allow resolving alias to external modules (02052e2 by Gilad). PR #61, Follow-up of PR #60</li> <li>Allow pre-loading modules (36002cb by Gilad). Issue mkdocstrings/mkdocstrings#503, PR #60</li> <li>Add show options for docstrings (a6c55fb by Jeremy Goh). Issue mkdocstrings/mkdocstrings#466, PR #56</li> <li>Allow custom list of domains for inventories (f5ea6fd by Sorin Sbarnea). Issue mkdocstrings/mkdocstrings#510, PR #49</li> </ul>"},{"location":"changelog/#bug-fixes","title":"Bug Fixes","text":"<ul> <li>Prevent alias resolution error when searching for anchors (a190e2c by Timoth\u00e9e Mazzucotelli). Issue #64</li> </ul>"},{"location":"changelog/#code-refactoring","title":"Code Refactoring","text":"<ul> <li>Support Griffe 0.26 (075735c by Timoth\u00e9e Mazzucotelli).</li> <li>Log (debug) unresolved aliases (9164742 by Timoth\u00e9e Mazzucotelli).</li> </ul>"},{"location":"changelog/#083-2023-01-04","title":"0.8.3 - 2023-01-04","text":"<p>Compare with 0.8.2</p>"},{"location":"changelog/#code-refactoring_1","title":"Code Refactoring","text":"<ul> <li>Change \"unresolved aliases\" log level to DEBUG (dccb818 by Timoth\u00e9e Mazzucotelli).</li> </ul>"},{"location":"changelog/#082-2022-11-19","title":"0.8.2 - 2022-11-19","text":"<p>Compare with 0.8.1</p>"},{"location":"changelog/#bug-fixes_1","title":"Bug Fixes","text":"<ul> <li>Fix base directory used to expand globs (34cfa4b by Florian Hofer). PR #45</li> </ul>"},{"location":"changelog/#081-2022-11-19","title":"0.8.1 - 2022-11-19","text":"<p>Compare with 0.8.0</p>"},{"location":"changelog/#bug-fixes_2","title":"Bug Fixes","text":"<ul> <li>Expand globs relative to configuration file path (0dc45ae by David Vegh). Issue #42, PR #43</li> </ul>"},{"location":"changelog/#080-2022-11-13","title":"0.8.0 - 2022-11-13","text":"<p>Compare with 0.7.1</p>"},{"location":"changelog/#features_1","title":"Features","text":"<ul> <li>Add support for globs in paths configuration (29edd02 by Andrew Guenther). Issue #33, PR #34</li> </ul>"},{"location":"changelog/#code-refactoring_2","title":"Code Refactoring","text":"<ul> <li>Support Griffe 0.24 (3b9f701 by Timoth\u00e9e Mazzucotelli).</li> </ul>"},{"location":"changelog/#071-2022-06-12","title":"0.7.1 - 2022-06-12","text":"<p>Compare with 0.7.0</p>"},{"location":"changelog/#bug-fixes_3","title":"Bug Fixes","text":"<ul> <li>Fix rendering of <code>/</code> in signatures (3e927e4 by Timoth\u00e9e Mazzucotelli). Issue #25</li> </ul>"},{"location":"changelog/#070-2022-05-28","title":"0.7.0 - 2022-05-28","text":"<p>Compare with 0.6.6</p>"},{"location":"changelog/#packaging-dependencies","title":"Packaging / Dependencies","text":"<ul> <li>Depend on mkdocstrings 0.19 (b6a9a47 by Timoth\u00e9e Mazzucotelli).</li> </ul>"},{"location":"changelog/#features_2","title":"Features","text":"<ul> <li>Add config option for annotations paths verbosity (b6c9893 by Timoth\u00e9e Mazzucotelli).</li> <li>Use sections titles in SpaCy-styled docstrings (fe16b54 by Timoth\u00e9e Mazzucotelli).</li> <li>Wrap objects names in spans to allow custom styling (0822ff9 by Timoth\u00e9e Mazzucotelli). Issue mkdocstrings/mkdocstrings#240</li> <li>Add Jinja blocks around docstring section styles (aaa79ee by Timoth\u00e9e Mazzucotelli).</li> <li>Add members and filters options (24a6136 by Timoth\u00e9e Mazzucotelli).</li> <li>Add paths option (dd41182 by Timoth\u00e9e Mazzucotelli). Issue mkdocstrings/mkdocstrings#311, PR #20</li> </ul>"},{"location":"changelog/#bug-fixes_4","title":"Bug Fixes","text":"<ul> <li>Fix CSS class on labels (312a709 by Timoth\u00e9e Mazzucotelli).</li> <li>Fix categories rendering (6407cf4 by Timoth\u00e9e Mazzucotelli). Issue #14</li> </ul>"},{"location":"changelog/#code-refactoring_3","title":"Code Refactoring","text":"<ul> <li>Disable <code>show_submodules</code> by default (480d0c3 by Timoth\u00e9e Mazzucotelli).</li> <li>Merge default configuration options in handler (347ce76 by Timoth\u00e9e Mazzucotelli).</li> <li>Reduce number of template debug logs (8fed314 by Timoth\u00e9e Mazzucotelli).</li> <li>Respect <code>show_root_full_path</code> for ToC entries (hidden headings) (8f4c853 by Timoth\u00e9e Mazzucotelli).</li> <li>Bring consistency on headings style (59104c4 by Timoth\u00e9e Mazzucotelli).</li> <li>Stop using deprecated base classes (d5ea1c5 by Timoth\u00e9e Mazzucotelli).</li> </ul>"},{"location":"changelog/#066-2022-03-06","title":"0.6.6 - 2022-03-06","text":"<p>Compare with 0.6.5</p>"},{"location":"changelog/#code-refactoring_4","title":"Code Refactoring","text":"<ul> <li>Always hide <code>self</code> and <code>cls</code> parameters (7f579d1 by Timoth\u00e9e Mazzucotelli). Issue #7</li> <li>Use <code>pycon</code> for examples code blocks (6545900 by Timoth\u00e9e Mazzucotelli).</li> </ul>"},{"location":"changelog/#065-2022-02-24","title":"0.6.5 - 2022-02-24","text":"<p>Compare with 0.6.4</p>"},{"location":"changelog/#bug-fixes_5","title":"Bug Fixes","text":"<ul> <li>Don't escape signatures return annotations (ac54bfc by Timoth\u00e9e Mazzucotelli). Issue #6</li> </ul>"},{"location":"changelog/#064-2022-02-22","title":"0.6.4 - 2022-02-22","text":"<p>Compare with 0.6.3</p>"},{"location":"changelog/#bug-fixes_6","title":"Bug Fixes","text":"<ul> <li>Fix rendering of signature return annotation (b92ba3b by Timoth\u00e9e Mazzucotelli). Issue #4</li> </ul>"},{"location":"changelog/#063-2022-02-20","title":"0.6.3 - 2022-02-20","text":"<p>Compare with 0.6.2</p>"},{"location":"changelog/#bug-fixes_7","title":"Bug Fixes","text":"<ul> <li>Fix examples rendering (a06a7e3 by Timoth\u00e9e Mazzucotelli). Issue mkdocstrings/griffe#46</li> </ul>"},{"location":"changelog/#062-2022-02-17","title":"0.6.2 - 2022-02-17","text":"<p>Compare with 0.6.1</p>"},{"location":"changelog/#bug-fixes_8","title":"Bug Fixes","text":"<ul> <li>Catch alias resolution errors (b734dd0 by Timoth\u00e9e Mazzucotelli).</li> </ul>"},{"location":"changelog/#061-2022-02-17","title":"0.6.1 - 2022-02-17","text":"<p>Compare with 0.6.0</p>"},{"location":"changelog/#bug-fixes_9","title":"Bug Fixes","text":"<ul> <li>Don't pop from fallback config (bde32af by Timoth\u00e9e Mazzucotelli).</li> <li>Fix rendering init method source when merged into class (4a20aea by Timoth\u00e9e Mazzucotelli).</li> </ul>"},{"location":"changelog/#060-2022-02-13","title":"0.6.0 - 2022-02-13","text":"<p>Compare with 0.5.4</p>"},{"location":"changelog/#features_3","title":"Features","text":"<ul> <li>Add option to merge <code>__init__</code> methods' docstrings into their classes' docstrings (1b4d1c0 by Timoth\u00e9e Mazzucotelli).</li> <li>Support separate attribute signature (e962b88 by Timoth\u00e9e Mazzucotelli).</li> </ul>"},{"location":"changelog/#bug-fixes_10","title":"Bug Fixes","text":"<ul> <li>Restore full cross-refs paths on hover (ac11970 by Timoth\u00e9e Mazzucotelli).</li> <li>Fix rendering of labels (52919c5 by Timoth\u00e9e Mazzucotelli).</li> </ul>"},{"location":"changelog/#code-refactoring_5","title":"Code Refactoring","text":"<ul> <li>Don't add trailing parentheses in functions heading when separate signature (885696e by Timoth\u00e9e Mazzucotelli).</li> <li>Use more explicit template debug messages (f2122d7 by Timoth\u00e9e Mazzucotelli).</li> </ul>"},{"location":"changelog/#054-2022-02-13","title":"0.5.4 - 2022-02-13","text":"<p>Compare with 0.5.3</p>"},{"location":"changelog/#bug-fixes_11","title":"Bug Fixes","text":"<ul> <li>Don't load additional modules during fallback (69b8e25 by Timoth\u00e9e Mazzucotelli).</li> </ul>"},{"location":"changelog/#053-2022-02-08","title":"0.5.3 - 2022-02-08","text":"<p>Compare with 0.5.2</p>"},{"location":"changelog/#bug-fixes_12","title":"Bug Fixes","text":"<ul> <li>Allow passing <code>null</code> as docstring style (f526816 by Timoth\u00e9e Mazzucotelli). Issue #2</li> </ul>"},{"location":"changelog/#052-2022-02-05","title":"0.5.2 - 2022-02-05","text":"<p>Compare with 0.5.1</p>"},{"location":"changelog/#dependencies","title":"Dependencies","text":"<ul> <li>Require at least mkdocstrings 0.18 (7abdda4 by Timoth\u00e9e Mazzucotelli).</li> </ul>"},{"location":"changelog/#051-2022-02-03","title":"0.5.1 - 2022-02-03","text":"<p>Compare with 0.5.0</p>"},{"location":"changelog/#dependencies_1","title":"Dependencies","text":"<ul> <li>Depend on Griffe &gt;= 0.11.1 (1303557 by Timoth\u00e9e Mazzucotelli).</li> </ul>"},{"location":"changelog/#code-refactoring_6","title":"Code Refactoring","text":"<ul> <li>Move handler into its own module (b787e78 by Timoth\u00e9e Mazzucotelli).</li> </ul>"},{"location":"changelog/#050-2022-02-03","title":"0.5.0 - 2022-02-03","text":"<p>Compare with 0.4.1</p>"},{"location":"changelog/#features_4","title":"Features","text":"<ul> <li>Allow changing docstring style of an object (39240c1 by Timoth\u00e9e Mazzucotelli).</li> </ul>"},{"location":"changelog/#bug-fixes_13","title":"Bug Fixes","text":"<ul> <li>Warn if Black is not installed when formatting signature (b848277 by Timoth\u00e9e Mazzucotelli).</li> <li>Fix missing default for <code>docstring_section_style</code> option (774988e by Timoth\u00e9e Mazzucotelli).</li> </ul>"},{"location":"changelog/#code-refactoring_7","title":"Code Refactoring","text":"<ul> <li>Change to new way of stripping paragraphs (33d4594 by Timoth\u00e9e Mazzucotelli).</li> </ul>"},{"location":"changelog/#041-2022-02-01","title":"0.4.1 - 2022-02-01","text":"<p>Compare with 0.4.0</p>"},{"location":"changelog/#bug-fixes_14","title":"Bug Fixes","text":"<ul> <li>Fix docstring admonitions rendering (a24ae2e by Timoth\u00e9e Mazzucotelli).</li> </ul>"},{"location":"changelog/#040-2022-02-01","title":"0.4.0 - 2022-02-01","text":"<p>Compare with 0.3.0</p>"},{"location":"changelog/#code-refactoring_8","title":"Code Refactoring","text":"<ul> <li>Use the new <code>mkdocstrings_handlers</code> namespace (23c9023 by Timoth\u00e9e Mazzucotelli).</li> </ul>"},{"location":"changelog/#030-2022-01-14","title":"0.3.0 - 2022-01-14","text":"<p>Compare with 0.2.0</p>"},{"location":"changelog/#features_5","title":"Features","text":"<ul> <li>Support griffe 0.10 (28061de by Timoth\u00e9e Mazzucotelli).</li> </ul>"},{"location":"changelog/#dependencies_2","title":"Dependencies","text":"<ul> <li>Require griffe 0.10 (cfbd7bb by Timoth\u00e9e Mazzucotelli).</li> </ul>"},{"location":"changelog/#code-refactoring_9","title":"Code Refactoring","text":"<ul> <li>Use new logger patching utility (4cdb292 by Timoth\u00e9e Mazzucotelli).</li> </ul>"},{"location":"changelog/#020-2021-12-28","title":"0.2.0 - 2021-12-28","text":"<p>Compare with 0.1.0</p>"},{"location":"changelog/#dependencies_3","title":"Dependencies","text":"<ul> <li>Depend on griffe &gt;= 0.7.1 (34f7ebd by Timoth\u00e9e Mazzucotelli).</li> <li>Upgrade griffe, no upper bound (8f0aa42 by Timoth\u00e9e Mazzucotelli).</li> </ul>"},{"location":"changelog/#features_6","title":"Features","text":"<ul> <li>Add <code>show_signature</code> rendering option (0f07c2e by Will Da Silva).</li> </ul>"},{"location":"changelog/#bug-fixes_15","title":"Bug Fixes","text":"<ul> <li>Fix templates for named docstring elements (47868a1 by Timoth\u00e9e Mazzucotelli).</li> </ul>"},{"location":"changelog/#010-2021-12-19","title":"0.1.0 - 2021-12-19","text":"<p>Compare with first commit</p>"},{"location":"changelog/#features_7","title":"Features","text":"<ul> <li>Implement handler and add templates (dbb580a by Timoth\u00e9e Mazzucotelli).</li> </ul>"},{"location":"changelog/#bug-fixes_16","title":"Bug Fixes","text":"<ul> <li>Fix separate signature feature (da6e81c by Timoth\u00e9e Mazzucotelli).</li> <li>Fix signature template (parameters annotations) (b34ead0 by Timoth\u00e9e Mazzucotelli).</li> <li>Only show source when present (c270d68 by Timoth\u00e9e Mazzucotelli).</li> </ul>"},{"location":"changelog/#code-refactoring_10","title":"Code Refactoring","text":"<ul> <li>Return all known anchors (9bbfe14 by Timoth\u00e9e Mazzucotelli).</li> <li>Update for griffe 0.4.0 (831aabb by Timoth\u00e9e Mazzucotelli).</li> </ul>"},{"location":"code_of_conduct/","title":"Contributor Covenant Code of Conduct","text":""},{"location":"code_of_conduct/#our-pledge","title":"Our Pledge","text":"<p>We as members, contributors, and leaders pledge to make participation in our community a harassment-free experience for everyone, regardless of age, body size, visible or invisible disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, or sexual identity and orientation.</p> <p>We pledge to act and interact in ways that contribute to an open, welcoming, diverse, inclusive, and healthy community.</p>"},{"location":"code_of_conduct/#our-standards","title":"Our Standards","text":"<p>Examples of behavior that contributes to a positive environment for our community include:</p> <ul> <li>Demonstrating empathy and kindness toward other people</li> <li>Being respectful of differing opinions, viewpoints, and experiences</li> <li>Giving and gracefully accepting constructive feedback</li> <li>Accepting responsibility and apologizing to those affected by our mistakes,   and learning from the experience</li> <li>Focusing on what is best not just for us as individuals, but for the overall   community</li> </ul> <p>Examples of unacceptable behavior include:</p> <ul> <li>The use of sexualized language or imagery, and sexual attention or advances of   any kind</li> <li>Trolling, insulting or derogatory comments, and personal or political attacks</li> <li>Public or private harassment</li> <li>Publishing others' private information, such as a physical or email address,   without their explicit permission</li> <li>Other conduct which could reasonably be considered inappropriate in a   professional setting</li> </ul>"},{"location":"code_of_conduct/#enforcement-responsibilities","title":"Enforcement Responsibilities","text":"<p>Community leaders are responsible for clarifying and enforcing our standards of acceptable behavior and will take appropriate and fair corrective action in response to any behavior that they deem inappropriate, threatening, offensive, or harmful.</p> <p>Community leaders have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, and will communicate reasons for moderation decisions when appropriate.</p>"},{"location":"code_of_conduct/#scope","title":"Scope","text":"<p>This Code of Conduct applies within all community spaces, and also applies when an individual is officially representing the community in public spaces. Examples of representing our community include using an official e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event.</p>"},{"location":"code_of_conduct/#enforcement","title":"Enforcement","text":"<p>Instances of abusive, harassing, or otherwise unacceptable behavior may be reported to the community leaders responsible for enforcement at pawamoy@pm.me. All complaints will be reviewed and investigated promptly and fairly.</p> <p>All community leaders are obligated to respect the privacy and security of the reporter of any incident.</p>"},{"location":"code_of_conduct/#enforcement-guidelines","title":"Enforcement Guidelines","text":"<p>Community leaders will follow these Community Impact Guidelines in determining the consequences for any action they deem in violation of this Code of Conduct:</p>"},{"location":"code_of_conduct/#1-correction","title":"1. Correction","text":"<p>Community Impact: Use of inappropriate language or other behavior deemed unprofessional or unwelcome in the community.</p> <p>Consequence: A private, written warning from community leaders, providing clarity around the nature of the violation and an explanation of why the behavior was inappropriate. A public apology may be requested.</p>"},{"location":"code_of_conduct/#2-warning","title":"2. Warning","text":"<p>Community Impact: A violation through a single incident or series of actions.</p> <p>Consequence: A warning with consequences for continued behavior. No interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, for a specified period of time. This includes avoiding interactions in community spaces as well as external channels like social media. Violating these terms may lead to a temporary or permanent ban.</p>"},{"location":"code_of_conduct/#3-temporary-ban","title":"3. Temporary Ban","text":"<p>Community Impact: A serious violation of community standards, including sustained inappropriate behavior.</p> <p>Consequence: A temporary ban from any sort of interaction or public communication with the community for a specified period of time. No public or private interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, is allowed during this period. Violating these terms may lead to a permanent ban.</p>"},{"location":"code_of_conduct/#4-permanent-ban","title":"4. Permanent Ban","text":"<p>Community Impact: Demonstrating a pattern of violation of community standards, including sustained inappropriate behavior, harassment of an individual, or aggression toward or disparagement of classes of individuals.</p> <p>Consequence: A permanent ban from any sort of public interaction within the community.</p>"},{"location":"code_of_conduct/#attribution","title":"Attribution","text":"<p>This Code of Conduct is adapted from the Contributor Covenant, version 2.1, available at https://www.contributor-covenant.org/version/2/1/code_of_conduct.html.</p> <p>Community Impact Guidelines were inspired by Mozilla's code of conduct enforcement ladder.</p> <p>For answers to common questions about this code of conduct, see the FAQ at https://www.contributor-covenant.org/faq. Translations are available at https://www.contributor-covenant.org/translations.</p>"},{"location":"contributing/","title":"Contributing","text":"<p>Contributions are welcome, and they are greatly appreciated! Every little bit helps, and credit will always be given.</p>"},{"location":"contributing/#environment-setup","title":"Environment setup","text":"<p>Nothing easier!</p> <p>Fork and clone the repository, then:</p> <pre><code>cd python\nmake setup\n</code></pre> <p>Note</p> <p> If it fails for some reason, you'll need to install PDM manually.</p> <p>You can install it with:</p> <pre><code>python3 -m pip install --user pipx\npipx install pdm\n</code></pre> <p>Now you can try running <code>make setup</code> again, or simply <code>pdm install</code>.</p> <p>You now have the dependencies installed.</p> <p>You can run the application with <code>pdm run mkdocstrings-python [ARGS...]</code>.</p> <p>Run <code>make help</code> to see all the available actions!</p>"},{"location":"contributing/#tasks","title":"Tasks","text":"<p>This project uses duty to run tasks. A Makefile is also provided. The Makefile will try to run certain tasks on multiple Python versions. If for some reason you don't want to run the task on multiple Python versions, you can do one of the following:</p> <ol> <li><code>export PYTHON_VERSIONS=</code>: this will run the task    with only the current Python version</li> <li>run the task directly with <code>pdm run duty TASK</code></li> </ol> <p>The Makefile detects if a virtual environment is activated, so <code>make</code> will work the same with the virtualenv activated or not.</p>"},{"location":"contributing/#development","title":"Development","text":"<p>As usual:</p> <ol> <li>create a new branch: <code>git checkout -b feature-or-bugfix-name</code></li> <li>edit the code and/or the documentation</li> </ol> <p>Before committing:</p> <ol> <li>run <code>make format</code> to auto-format the code</li> <li>run <code>make check</code> to check everything (fix any warning)</li> <li>run <code>make test</code> to run the tests (fix any issue)</li> <li>if you updated the documentation or the project dependencies:<ol> <li>run <code>make docs-serve</code></li> <li>go to http://localhost:8000 and check that everything looks good</li> </ol> </li> <li>follow our commit message convention</li> </ol> <p>If you are unsure about how to fix or ignore a warning, just let the continuous integration fail, and we will help you during review.</p> <p>Don't bother updating the changelog, we will take care of this.</p>"},{"location":"contributing/#commit-message-convention","title":"Commit message convention","text":"<p>Commit messages must follow our convention based on the Angular style or the Karma convention:</p> <pre><code>&lt;type&gt;[(scope)]: Subject\n\n[Body]\n</code></pre> <p>Subject and body must be valid Markdown. Subject must have proper casing (uppercase for first letter if it makes sense), but no dot at the end, and no punctuation in general.</p> <p>Scope and body are optional. Type can be:</p> <ul> <li><code>build</code>: About packaging, building wheels, etc.</li> <li><code>chore</code>: About packaging or repo/files management.</li> <li><code>ci</code>: About Continuous Integration.</li> <li><code>deps</code>: Dependencies update.</li> <li><code>docs</code>: About documentation.</li> <li><code>feat</code>: New feature.</li> <li><code>fix</code>: Bug fix.</li> <li><code>perf</code>: About performance.</li> <li><code>refactor</code>: Changes that are not features or bug fixes.</li> <li><code>style</code>: A change in code style/format.</li> <li><code>tests</code>: About tests.</li> </ul> <p>If you write a body, please add trailers at the end (for example issues and PR references, or co-authors), without relying on GitHub's flavored Markdown:</p> <pre><code>Body.\n\nIssue #10: https://github.com/namespace/project/issues/10\nRelated to PR namespace/other-project#15: https://github.com/namespace/other-project/pull/15\n</code></pre> <p>These \"trailers\" must appear at the end of the body, without any blank lines between them. The trailer title can contain any character except colons <code>:</code>. We expect a full URI for each trailer, not just GitHub autolinks (for example, full GitHub URLs for commits and issues, not the hash or the #issue-number).</p> <p>We do not enforce a line length on commit messages summary and body, but please avoid very long summaries, and very long lines in the body, unless they are part of code blocks that must not be wrapped.</p>"},{"location":"contributing/#pull-requests-guidelines","title":"Pull requests guidelines","text":"<p>Link to any related issue in the Pull Request message.</p> <p>During the review, we recommend using fixups:</p> <pre><code># SHA is the SHA of the commit you want to fix\ngit commit --fixup=SHA\n</code></pre> <p>Once all the changes are approved, you can squash your commits:</p> <pre><code>git rebase -i --autosquash master\n</code></pre> <p>And force-push:</p> <pre><code>git push -f\n</code></pre> <p>If this seems all too complicated, you can push or force-push each new commit, and we will squash them ourselves if needed, before merging.</p>"},{"location":"credits/","title":"Credits","text":"<p>These projects were used to build <code>mkdocstrings-python</code>. Thank you!</p> <p><code>python</code> | <code>pdm</code> | <code>copier-pdm</code></p>"},{"location":"credits/#exec-0--runtime-dependencies","title":"Runtime dependencies","text":"Project Summary Version (accepted) Version (last resolved) License <code>cached-property</code> A decorator for caching properties in classes. <code>; python_version &lt; \"3.8\"</code> <code>1.5.2</code> ? <code>click</code> Composable command line interface toolkit <code>&gt;=7.0</code> <code>8.1.3</code> BSD-3-Clause <code>colorama</code> Cross-platform colored terminal text. <code>&gt;=0.4</code> <code>0.4.6</code> BSD License <code>ghp-import</code> Copy your docs directly to the gh-pages branch. <code>&gt;=1.0</code> <code>2.1.0</code> Apache Software License <code>griffe</code> Signatures for entire Python programs. Extract the structure, the frame, the skeleton of your project, to generate API documentation or find breaking changes in your API. <code>&gt;=0.24</code> <code>0.26.0</code> ISC <code>importlib-metadata</code> Read metadata from Python packages <code>&gt;=4.4; python_version &lt; \"3.10\"</code> <code>6.1.0</code> ? <code>jinja2</code> A very fast and expressive template engine. <code>&gt;=2.11.1</code> <code>3.1.2</code> BSD-3-Clause <code>markdown</code> Python implementation of Markdown. <code>&gt;=3.3</code> <code>3.3.7</code> BSD License <code>markupsafe</code> Safely add untrusted strings to HTML/XML markup. <code>&gt;=1.1</code> <code>2.1.2</code> BSD-3-Clause <code>mergedeep</code> A deep merge function for \ud83d\udc0d. <code>&gt;=1.3.4</code> <code>1.3.4</code> MIT License <code>mkdocs</code> Project documentation with Markdown. <code>&gt;=1.2</code> <code>1.4.2</code> BSD License <code>mkdocs-autorefs</code> Automatically link across pages in MkDocs. <code>&gt;=0.3.1</code> <code>0.4.1</code> ISC License (ISCL) <code>mkdocstrings</code> Automatic documentation from sources, for MkDocs. <code>&gt;=0.20</code> <code>0.20.0</code> ISC <code>packaging</code> Core utilities for Python packages <code>&gt;=20.5</code> <code>23.0</code> BSD License <code>pymdown-extensions</code> Extension pack for Python Markdown. <code>&gt;=6.3</code> <code>9.10</code> MIT License <code>python-dateutil</code> Extensions to the standard Python datetime module <code>&gt;=2.8.1</code> <code>2.8.2</code> Dual License <code>pyyaml</code> YAML parser and emitter for Python <code>6.0</code> MIT <code>pyyaml-env-tag</code> A custom YAML tag for referencing environment variables in YAML files. <code>&gt;=0.1</code> <code>0.1</code> MIT License <code>six</code> Python 2 and 3 compatibility utilities <code>&gt;=1.5</code> <code>1.16.0</code> MIT <code>typing-extensions</code> Backported and Experimental Type Hints for Python 3.7+ <code>&gt;=3.10; python_version &lt; \"3.8\"</code> <code>4.5.0</code> Python Software Foundation License <code>watchdog</code> Filesystem events monitoring <code>&gt;=2.0</code> <code>3.0.0</code> Apache License 2.0 <code>zipp</code> Backport of pathlib-compatible object wrapper for zip files <code>&gt;=0.5</code> <code>3.15.0</code> ?"},{"location":"credits/#exec-0--development-dependencies","title":"Development dependencies","text":"Project Summary Version (accepted) Version (last resolved) License <code>ansimarkup</code> Produce colored terminal text with an xml-like markup <code>~=1.4</code> <code>1.5.0</code> Revised BSD License <code>attrs</code> Classes Without Boilerplate <code>&gt;=19.2.0</code> <code>22.2.0</code> MIT <code>black</code> The uncompromising code formatter. <code>&gt;=23.1</code> <code>23.3.0</code> MIT <code>blacken-docs</code> Run Black on Python code blocks in documentation files. <code>&gt;=1.13</code> <code>1.13.0</code> MIT <code>cached-property</code> A decorator for caching properties in classes. <code>&gt;=1.5; python_version &lt; \"3.8\"</code> <code>1.5.2</code> ? <code>certifi</code> Python package for providing Mozilla's CA Bundle. <code>&gt;=2017.4.17</code> <code>2022.12.7</code> MPL-2.0 <code>charset-normalizer</code> The Real First Universal Charset Detector. Open, modern and actively maintained alternative to Chardet. <code>&lt;4,&gt;=2</code> <code>3.1.0</code> MIT <code>click</code> Composable command line interface toolkit <code>&gt;=8.0.0</code> <code>8.1.3</code> BSD-3-Clause <code>colorama</code> Cross-platform colored terminal text. <code>; platform_system == \"Windows\"</code> <code>0.4.6</code> BSD License <code>coverage</code> Code coverage measurement for Python <code>[toml]&gt;=5.2.1</code> <code>7.2.2</code> Apache-2.0 <code>dparse</code> A parser for Python dependency files <code>&gt;=0.6.2</code> <code>0.6.2</code> MIT license <code>duty</code> A simple task runner. <code>&gt;=0.8</code> <code>0.9.0</code> ISC <code>exceptiongroup</code> Backport of PEP 654 (exception groups) <code>&gt;=1.0.0rc8; python_version &lt; \"3.11\"</code> <code>1.1.1</code> ? <code>execnet</code> execnet: rapid multi-Python deployment <code>&gt;=1.1</code> <code>1.9.0</code> MIT <code>failprint</code> Run a command, print its output only if it fails. <code>&gt;=0.10</code> <code>0.10.0</code> ISC <code>ghp-import</code> Copy your docs directly to the gh-pages branch. <code>&gt;=1.0</code> <code>2.1.0</code> Apache Software License <code>git-changelog</code> Automatic Changelog generator using Jinja2 templates. <code>&gt;=1.0</code> <code>1.0.0</code> ISC <code>idna</code> Internationalized Domain Names in Applications (IDNA) <code>&lt;4,&gt;=2.5</code> <code>3.4</code> BSD License <code>importlib-metadata</code> Read metadata from Python packages <code>; python_version &lt; \"3.8\"</code> <code>6.1.0</code> ? <code>iniconfig</code> brain-dead simple config-ini parsing <code>2.0.0</code> MIT License <code>jinja2</code> A very fast and expressive template engine. <code>&lt;4,&gt;=2.11</code> <code>3.1.2</code> BSD-3-Clause <code>markdown</code> Python implementation of Markdown. <code>&lt;4.0.0,&gt;=3.3.3</code> <code>3.3.7</code> BSD License <code>markdown-callouts</code> Markdown extension: a classier syntax for admonitions <code>&gt;=0.2</code> <code>0.3.0</code> MIT <code>markdown-exec</code> Utilities to execute code blocks in Markdown files. <code>&gt;=0.5</code> <code>1.4.0</code> ISC <code>markupsafe</code> Safely add untrusted strings to HTML/XML markup. <code>&gt;=2.0</code> <code>2.1.2</code> BSD-3-Clause <code>mergedeep</code> A deep merge function for \ud83d\udc0d. <code>&gt;=1.3.4</code> <code>1.3.4</code> MIT License <code>mkdocs</code> Project documentation with Markdown. <code>&gt;=1.3</code> <code>1.4.2</code> BSD License <code>mkdocs-coverage</code> MkDocs plugin to integrate your coverage HTML report into your site. <code>&gt;=0.2</code> <code>0.2.6</code> ISC <code>mkdocs-gen-files</code> MkDocs plugin to programmatically generate documentation pages during the build <code>&gt;=0.3</code> <code>0.4.0</code> MIT <code>mkdocs-literate-nav</code> MkDocs plugin to specify the navigation in Markdown instead of YAML <code>&gt;=0.4</code> <code>0.6.0</code> MIT License <code>mkdocs-material</code> Documentation that simply works <code>&gt;=7.3</code> <code>9.1.5</code> MIT License <code>mkdocs-material-extensions</code> Extension pack for Python Markdown and MkDocs Material. <code>&gt;=1.1</code> <code>1.1.1</code> MIT License <code>mkdocs-section-index</code> MkDocs plugin to allow clickable sections that lead to an index page <code>&gt;=0.3</code> <code>0.3.5</code> MIT License <code>mypy</code> Optional static typing for Python <code>&gt;=0.911</code> <code>1.1.1</code> MIT License <code>mypy-extensions</code> Type system extensions for programs checked with the mypy type checker. <code>&gt;=0.4.3</code> <code>1.0.0</code> MIT License <code>packaging</code> Core utilities for Python packages <code>&gt;=22.0</code> <code>23.0</code> BSD License <code>pathspec</code> Utility library for gitignore style pattern matching of file paths. <code>&gt;=0.9.0</code> <code>0.11.1</code> Mozilla Public License 2.0 (MPL 2.0) <code>platformdirs</code> A small Python package for determining appropriate platform-specific dirs, e.g. a \"user data dir\". <code>&gt;=2</code> <code>3.2.0</code> MIT License <code>pluggy</code> plugin and hook calling mechanisms for python <code>&lt;2.0,&gt;=0.12</code> <code>1.0.0</code> MIT <code>ptyprocess</code> Run a subprocess in a pseudo terminal <code>~=0.6; sys_platform != \"win32\"</code> <code>0.7.0</code> ISC License (ISCL) <code>pygments</code> Pygments is a syntax highlighting package written in Python. <code>&gt;=2.14</code> <code>2.14.0</code> BSD-2-Clause <code>pymdown-extensions</code> Extension pack for Python Markdown. <code>&gt;=9</code> <code>9.10</code> MIT License <code>pytest</code> pytest: simple powerful testing with Python <code>&gt;=6.2</code> <code>7.2.2</code> MIT <code>pytest-cov</code> Pytest plugin for measuring coverage. <code>&gt;=3.0</code> <code>4.0.0</code> MIT <code>pytest-randomly</code> Pytest plugin to randomly order tests and control random.seed. <code>&gt;=3.10</code> <code>3.12.0</code> MIT <code>pytest-xdist</code> pytest xdist plugin for distributed testing, most importantly across multiple CPUs <code>&gt;=2.4</code> <code>3.2.1</code> MIT <code>python-dateutil</code> Extensions to the standard Python datetime module <code>&gt;=2.8.1</code> <code>2.8.2</code> Dual License <code>pyyaml</code> YAML parser and emitter for Python <code>&gt;=5.1</code> <code>6.0</code> MIT <code>pyyaml-env-tag</code> A custom YAML tag for referencing environment variables in YAML files. <code>&gt;=0.1</code> <code>0.1</code> MIT License <code>regex</code> Alternative regular expression module, to replace re. <code>&gt;=2022.4.24</code> <code>2022.10.31</code> Apache Software License <code>requests</code> Python HTTP for Humans. <code>&gt;=2.26</code> <code>2.28.2</code> Apache 2.0 <code>ruamel-yaml</code> ruamel.yaml is a YAML parser/emitter that supports roundtrip preservation of comments, seq/map flow style, and map key order <code>&gt;=0.17.21</code> <code>0.17.21</code> MIT license <code>ruamel-yaml-clib</code> C version of reader, parser and emitter for ruamel.yaml derived from libyaml <code>&gt;=0.2.6; platform_python_implementation == \"CPython\" and python_version &lt; \"3.11\"</code> <code>0.2.7</code> ? <code>ruff</code> An extremely fast Python linter, written in Rust. <code>&gt;=0.0.246</code> <code>0.0.260</code> MIT <code>safety</code> Checks installed dependencies for known vulnerabilities and licenses. <code>&gt;=2</code> <code>2.3.4</code> MIT license <code>semver</code> Python helper for Semantic Versioning (http://semver.org/) <code>~=2.13</code> <code>2.13.0</code> BSD <code>setuptools</code> Easily download, build, install, upgrade, and uninstall Python packages <code>&gt;=19.3</code> <code>67.6.1</code> MIT License <code>six</code> Python 2 and 3 compatibility utilities <code>&gt;=1.5</code> <code>1.16.0</code> MIT <code>toml</code> Python Library for Tom's Obvious, Minimal Language <code>&gt;=0.10</code> <code>0.10.2</code> MIT <code>tomli</code> A lil' TOML parser <code>&gt;=1.1.0; python_version &lt; \"3.11\"</code> <code>2.0.1</code> ? <code>typed-ast</code> a fork of Python 2 and 3 ast modules with type comment support <code>&gt;=1.4.2; python_version &lt; \"3.8\" and implementation_name == \"cpython\"</code> <code>1.5.4</code> ? <code>types-markdown</code> Typing stubs for Markdown <code>&gt;=3.3</code> <code>3.4.2.6</code> Apache-2.0 license <code>types-toml</code> Typing stubs for toml <code>&gt;=0.10</code> <code>0.10.8.6</code> Apache-2.0 license <code>typing-extensions</code> Backported and Experimental Type Hints for Python 3.7+ <code>&gt;=3.10.0.0; python_version &lt; \"3.10\"</code> <code>4.5.0</code> Python Software Foundation License <code>urllib3</code> HTTP library with thread-safe connection pooling, file post, and more. <code>&lt;1.27,&gt;=1.21.1</code> <code>1.26.15</code> MIT <code>watchdog</code> Filesystem events monitoring <code>&gt;=2.0</code> <code>3.0.0</code> Apache License 2.0 <code>zipp</code> Backport of pathlib-compatible object wrapper for zip files <code>&gt;=0.5</code> <code>3.15.0</code> ? <p>More credits from the author</p>"},{"location":"customization/","title":"Customization","text":"<p>It is possible to customize the output of the generated documentation with CSS and/or by overriding templates.</p>"},{"location":"customization/#css-classes","title":"CSS classes","text":"<p>The following CSS classes are used in the generated HTML:</p> <ul> <li><code>doc</code>: on all the following elements</li> <li><code>doc-children</code>: on <code>div</code>s containing the children of an object</li> <li><code>doc-object</code>: on <code>div</code>s containing an object<ul> <li><code>doc-attribute</code>: on <code>div</code>s containing an attribute</li> <li><code>doc-class</code>: on <code>div</code>s containing a class</li> <li><code>doc-function</code>: on <code>div</code>s containing a function</li> <li><code>doc-module</code>: on <code>div</code>s containing a module</li> </ul> </li> <li><code>doc-heading</code>: on objects headings<ul> <li><code>doc-object-name</code>: on <code>span</code>s wrapping objects names/paths in the heading<ul> <li><code>doc-KIND-name</code>: as above, specific to the kind of object (module, class, function, attribute)</li> </ul> </li> </ul> </li> <li><code>doc-contents</code>: on <code>div</code>s wrapping the docstring then the children (if any)<ul> <li><code>first</code>: same, but only on the root object's contents <code>div</code></li> </ul> </li> <li><code>doc-labels</code>: on <code>span</code>s wrapping the object's labels<ul> <li><code>doc-label</code>: on <code>small</code> elements containing a label<ul> <li><code>doc-label-LABEL</code>: same, where <code>LABEL</code> is replaced by the actual label</li> </ul> </li> </ul> </li> </ul> <p>Example with colorful labels</p> CSSResult <pre><code>.doc-label { border-radius: 15px; padding: 0 5px; }\n.doc-label-special { background-color: blue; color: white; }\n.doc-label-private { background-color: red; color: white; }\n.doc-label-property { background-color: green; color: white; }\n.doc-label-read-only { background-color: yellow; color: black; }\n</code></pre> <p> special private property read-only </p>"},{"location":"customization/#recommended-style-material","title":"Recommended style (Material)","text":"<p>Here are some CSS rules for the Material for MkDocs theme:</p> <pre><code>/* Indentation. */\ndiv.doc-contents:not(.first) {\npadding-left: 25px;\nborder-left: .05rem solid var(--md-typeset-table-color);\n}\n\n/* Mark external links as such. */\na.autorefs-external::after {\n/* https://primer.style/octicons/arrow-up-right-24 */\nbackground-image: url('data:image/svg+xml,&lt;svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"&gt;&lt;path fill=\"rgb(0, 0, 0)\" d=\"M18.25 15.5a.75.75 0 00.75-.75v-9a.75.75 0 00-.75-.75h-9a.75.75 0 000 1.5h7.19L6.22 16.72a.75.75 0 101.06 1.06L17.5 7.56v7.19c0 .414.336.75.75.75z\"&gt;&lt;/path&gt;&lt;/svg&gt;');\ncontent: ' ';\n\ndisplay: inline-block;\nposition: relative;\ntop: 0.1em;\nmargin-left: 0.2em;\nmargin-right: 0.1em;\n\nheight: 1em;\nwidth: 1em;\nborder-radius: 100%;\nbackground-color: var(--md-typeset-a-color);\n}\na.autorefs-external:hover::after {\nbackground-color: var(--md-accent-fg-color);\n}\n</code></pre>"},{"location":"customization/#recommended-style-readthedocs","title":"Recommended style (ReadTheDocs)","text":"<p>Here are some CSS rules for the built-in ReadTheDocs theme:</p> <pre><code>/* Indentation. */\ndiv.doc-contents:not(.first) {\npadding-left: 25px;\nborder-left: .05rem solid rgba(200, 200, 200, 0.2);\n}\n</code></pre>"},{"location":"customization/#templates","title":"Templates","text":"<p>Templates are organized into the following tree:</p> <pre><code>\ud83d\udcc1 theme/\n\u251c\u2500\u2500 \ud83d\udcc4 attribute.html\n\u251c\u2500\u2500 \ud83d\udcc4 children.html\n\u251c\u2500\u2500 \ud83d\udcc4 class.html\n\u251c\u2500\u2500 \ud83d\udcc1 docstring/\n\u2502   \u251c\u2500\u2500 \ud83d\udcc4 admonition.html\n\u2502   \u251c\u2500\u2500 \ud83d\udcc4 attributes.html\n\u2502   \u251c\u2500\u2500 \ud83d\udcc4 examples.html\n\u2502   \u251c\u2500\u2500 \ud83d\udcc4 other_parameters.html\n\u2502   \u251c\u2500\u2500 \ud83d\udcc4 parameters.html\n\u2502   \u251c\u2500\u2500 \ud83d\udcc4 raises.html\n\u2502   \u251c\u2500\u2500 \ud83d\udcc4 receives.html\n\u2502   \u251c\u2500\u2500 \ud83d\udcc4 returns.html\n\u2502   \u251c\u2500\u2500 \ud83d\udcc4 warns.html\n\u2502   \u2514\u2500\u2500 \ud83d\udcc4 yields.html\n\u251c\u2500\u2500 \ud83d\udcc4 docstring.html\n\u251c\u2500\u2500 \ud83d\udcc4 expression.html\n\u251c\u2500\u2500 \ud83d\udcc4 function.html\n\u251c\u2500\u2500 \ud83d\udcc4 labels.html\n\u251c\u2500\u2500 \ud83d\udcc4 module.html\n\u2514\u2500\u2500 \ud83d\udcc4 signature.html\n</code></pre> <p>See them in the repository. See the general mkdocstrings documentation to learn how to override them: https://mkdocstrings.github.io/theming/#templates.</p> <p>In preparation for Jinja2 blocks, which will improve customization, each one of these templates extends a base version in <code>theme/_base</code>. Example:</p> theme/docstring/admonition.html<pre><code>{% extends \"_base/docstring/admonition.html\" %}\n</code></pre> theme/_base/docstring/admonition.html<pre><code>{{ log.debug() }}\n&lt;details class=\"{{ section.value.kind }}\"&gt;\n  &lt;summary&gt;{{ section.title|convert_markdown(heading_level, html_id, strip_paragraph=True) }}&lt;/summary&gt;\n  {{ section.value.contents|convert_markdown(heading_level, html_id) }}\n&lt;/details&gt;\n</code></pre> <p>It means you will be able to customize only parts of a template without having to fully copy-paste it into your project:</p> templates/theme/docstring.html<pre><code>{% extends \"_base/docstring.html\" %}\n{% block contents %}\n{{ block.super }}\n  Additional contents\n{% endblock contents %}\n</code></pre> <p>Block-level customization is not ready yet. We welcome suggestions.</p>"},{"location":"license/","title":"License","text":"<pre><code>ISC License\n\nCopyright (c) 2021, Timoth\u00e9e Mazzucotelli\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n</code></pre>"},{"location":"usage/","title":"Usage","text":"<p>This is the documentation for the NEW Python handler.</p> <p>To read the documentation for the LEGACY handler, go to the legacy handler documentation.</p> <p>The tool used by the Python handler to collect documentation from Python source code is Griffe. The word \"griffe\" can sometimes be used instead of \"signature\" in french. Griffe is able to visit the Abstract Syntax Tree (AST) of the source code to extract useful information. It is also able to execute the code (by importing it) and introspect objects in memory when source code is not available. Finally, it can parse docstrings following different styles, see Supported docstrings styles.</p> <p>Like every handler, the Python handler accepts both global and local options.</p>"},{"location":"usage/#global-only-options","title":"Global-only options","text":"<p>Some options are global only, and go directly under the handler's name.</p> <ul> <li> <p><code>import</code>: this option is used to import Sphinx-compatible objects inventories from other     documentation sites. For example, you can import the standard library     objects inventory like this:</p> mkdocs.yml<pre><code>plugins:\n- mkdocstrings:\nhandlers:\npython:\nimport:\n- https://docs.python-requests.org/en/master/objects.inv\n</code></pre> <p>When importing an inventory, you enable automatic cross-references to other documentation sites like the standard library docs or any third-party package docs. Typically, you want to import the inventories of your project's dependencies, at least those that are used in the public API. </p> <p>Note</p> <p>This global option is common to all handlers, however they might implement it differently (or not even implement it).</p> </li> <li> <p><code>paths</code>: this option is used to provide filesystem paths in which to search for Python modules.     Non-absolute paths are computed as relative to MkDocs configuration file. Example:</p> mkdocs.yml<pre><code>plugins:\n- mkdocstrings:\nhandlers:\npython:\npaths: [src]  # search packages in the src folder\n</code></pre> <p>More details at Finding modules.</p> </li> <li> <p><code>load_external_modules</code>:   this option allows resolving aliases to any external module.   Enabling this option will tell handler that when it encounters an import that is made public   through the <code>__all__</code> variable, it will resolve it recursively to any module. Use with caution: this can load a lot of modules, slowing down your build   or triggering errors that we do not yet handle. We recommend using the <code>preload_modules</code> option instead,   which acts as an include-list rather than as include-all.  </p> </li> </ul>"},{"location":"usage/#globallocal-options","title":"Global/local options","text":"<p>The other options can be used both globally and locally, under the <code>options</code> key. For example, globally:</p> mkdocs.yml<pre><code>plugins:\n- mkdocstrings:\nhandlers:\npython:\noptions:\ndo_something: true\n</code></pre> <p>...and locally, overriding the global configuration:</p> docs/some_page.md<pre><code>::: package.module.class\n    options:\n      do_something: false\n</code></pre> <p>These options affect how the documentation is collected from sources and rendered: headings, members, docstrings, etc.</p> <p>Headings options:</p> Name Type Description <code>heading_level</code> <code>int</code> <p>The initial heading level to use. Default: <code>2</code>.</p> <code>show_root_heading</code> <code>bool</code> <p>Show the heading of the object at the root of the documentation tree (i.e. the object referenced by the identifier after <code>:::</code>). Default: <code>False</code>.</p> <code>show_root_toc_entry</code> <code>bool</code> <p>If the root heading is not shown, at least add a ToC entry for it. Default: <code>True</code>.</p> <code>show_root_full_path</code> <code>bool</code> <p>Show the full Python path for the root object heading. Default: <code>True</code>.</p> <code>show_root_members_full_path</code> <code>bool</code> <p>Show the full Python path of the root members. Default: <code>False</code>.</p> <code>show_object_full_path</code> <code>bool</code> <p>Show the full Python path of every object. Default: <code>False</code>.</p> <code>show_category_heading</code> <code>bool</code> <p>When grouped by categories, show a heading for each category. Default: <code>False</code>.</p> <p>Members options:</p> Name Type Description <code>members</code> <code>list[str] | False | None</code> <p>An explicit list of members to render. Default: <code>None</code>.</p> <code>members_order</code> <code>str</code> <p>The members ordering to use. Options: <code>alphabetical</code> - order by the members names, <code>source</code> - order members as they appear in the source file. Default: <code>\"alphabetical\"</code>.</p> <code>filters</code> <code>list[str] | None</code> <p>A list of filters applied to filter objects based on their name. A filter starting with <code>!</code> will exclude matching objects instead of including them. The <code>members</code> option takes precedence over <code>filters</code> (filters will still be applied recursively to lower members in the hierarchy). Default: <code>[\"!^_[^_]\"]</code>.</p> <code>group_by_category</code> <code>bool</code> <p>Group the object's children by categories: attributes, classes, functions, and modules. Default: <code>True</code>.</p> <code>show_submodules</code> <code>bool</code> <p>When rendering a module, show its submodules recursively. Default: <code>False</code>.</p> <p>Docstrings options:</p> Name Type Description <code>docstring_style</code> <code>str</code> <p>The docstring style to use: <code>google</code>, <code>numpy</code>, <code>sphinx</code>, or <code>None</code>. Default: <code>\"google\"</code>.</p> <code>docstring_options</code> <code>dict</code> <p>The options for the docstring parser. See parsers under <code>griffe.docstrings</code>.</p> <code>docstring_section_style</code> <code>str</code> <p>The style used to render docstring sections. Options: <code>table</code>, <code>list</code>, <code>spacy</code>. Default: <code>\"table\"</code>.</p> <code>line_length</code> <code>int</code> <p>Maximum line length when formatting code/signatures. Default: <code>60</code>.</p> <code>merge_init_into_class</code> <code>bool</code> <p>Whether to merge the <code>__init__</code> method into the class' signature and docstring. Default: <code>False</code>.</p> <code>show_if_no_docstring</code> <code>bool</code> <p>Show the object heading even if it has no docstring or children with docstrings. Default: <code>False</code>.</p> <code>show_docstring_attributes</code> <code>bool</code> <p>Whether to display the \"Attributes\" section in the object's docstring. Default: <code>True</code>.</p> <code>show_docstring_description</code> <code>bool</code> <p>Whether to display the textual block (including admonitions) in the object's docstring. Default: <code>True</code>.</p> <code>show_docstring_examples</code> <code>bool</code> <p>Whether to display the \"Examples\" section in the object's docstring. Default: <code>True</code>.</p> <code>show_docstring_other_parameters</code> <code>bool</code> <p>Whether to display the \"Other Parameters\" section in the object's docstring. Default: <code>True</code>.</p> <code>show_docstring_parameters</code> <code>bool</code> <p>Whether to display the \"Parameters\" section in the object's docstring. Default: <code>True</code>.</p> <code>show_docstring_raises</code> <code>bool</code> <p>Whether to display the \"Raises\" section in the object's docstring. Default: <code>True</code>.</p> <code>show_docstring_receives</code> <code>bool</code> <p>Whether to display the \"Receives\" section in the object's docstring. Default: <code>True</code>.</p> <code>show_docstring_returns</code> <code>bool</code> <p>Whether to display the \"Returns\" section in the object's docstring. Default: <code>True</code>.</p> <code>show_docstring_warns</code> <code>bool</code> <p>Whether to display the \"Warns\" section in the object's docstring. Default: <code>True</code>.</p> <code>show_docstring_yields</code> <code>bool</code> <p>Whether to display the \"Yields\" section in the object's docstring. Default: <code>True</code>.</p> <p>Signatures/annotations options:</p> Name Type Description <code>annotations_path</code> <code>str</code> <p>The verbosity for annotations path: <code>brief</code> (recommended), or <code>source</code> (as written in the source). Default: <code>\"brief\"</code>.</p> <code>show_signature</code> <code>bool</code> <p>Show methods and functions signatures. Default: <code>True</code>.</p> <code>show_signature_annotations</code> <code>bool</code> <p>Show the type annotations in methods and functions signatures. Default: <code>False</code>.</p> <code>separate_signature</code> <code>bool</code> <p>Whether to put the whole signature in a code block below the heading. If Black is installed, the signature is also formatted using it. Default: <code>False</code>.</p> <p>Additional options:</p> Name Type Description <code>show_bases</code> <code>bool</code> <p>Show the base classes of a class. Default: <code>True</code>.</p> <code>show_source</code> <code>bool</code> <p>Show the source code of this object. Default: <code>True</code>.</p> <code>preload_modules</code> <code>list[str] | None</code> <p>Pre-load modules that are not specified directly in autodoc instructions (<code>::: identifier</code>). It is useful when you want to render documentation for a particular member of an object, and this member is imported from another package than its parent.</p> <p>For an imported member to be rendered, you need to add it to the <code>__all__</code> attribute of the importing module.</p> <p>The modules must be listed as an array of strings. Default: <code>None</code>.</p>"},{"location":"usage/#supported-docstrings-styles","title":"Supported docstrings styles","text":"<p>Griffe supports the Google-style, Numpy-style and Sphinx-style docstring formats. The style used by default is the Google-style. You can configure what style you want to use with the <code>docstring_style</code> and <code>docstring_options</code> options, both globally or locally, i.e. per autodoc instruction.</p> <ul> <li>Google: see Napoleon's documentation.</li> <li>Numpy: see Numpydoc's documentation.</li> <li>Sphinx: see Sphinx's documentation.</li> </ul> <p>See the supported docstring sections on Griffe's documentation.</p> <p>Note</p> <p>As Numpy-style is partially supported by the underlying parser, you may experience problems in the building process if your docstring has a <code>Methods</code> section in the class docstring (see #366).</p>"},{"location":"usage/#google-style-admonitions","title":"Google-style admonitions","text":"<p>With Google-style docstrings, any section that is not recognized will be transformed into its admonition equivalent. For example:</p> DocstringResult <pre><code>\"\"\"\nNote:\n    It looks like a section, but it will be rendered as an admonition.\n\nTip: You can even choose a title.\n    This admonition has a custom title!\n\"\"\"\n</code></pre> <p>Note</p> <p>It looks like a section, but it will be rendered as an admonition.</p> <p>You can even choose a title.</p> <p>This admonition has a custom title!</p>"},{"location":"usage/#finding-modules","title":"Finding modules","text":"<p>There are multiple ways to tell the handler where to find your packages/modules.</p> <p>The recommended method is to use the <code>paths</code> option, as it's the only one that works with the <code>-f</code> option of MkDocs, allowing to build the documentation from any location on the file system. Indeed, the paths provided with the <code>paths</code> option are computed as relative to the configuration file (mkdocs.yml), so that the current working directory has no impact on the build process: you can build the docs from any location on your filesystem.</p>"},{"location":"usage/#using-the-paths-option","title":"Using the <code>paths</code> option","text":"<p>This is the recommended method.</p> <ol> <li> <p>mkdocs.yml in root, package in root     <pre><code>\ud83d\udcc1 root/\n\u251c\u2500\u2500 \ud83d\udcc4 mkdocs.yml\n\u2514\u2500\u2500 \ud83d\udcc1 package/\n</code></pre></p> mkdocs.yml<pre><code>plugins:\n- mkdocstrings:\nhandlers:\npython:\npaths: [.]  # actually not needed, default\n</code></pre> </li> <li> <p>mkdocs.yml in root, package in subfolder     <pre><code>\ud83d\udcc1 root/\n\u251c\u2500\u2500 \ud83d\udcc4 mkdocs.yml\n\u2514\u2500\u2500 \ud83d\udcc1 src/\n    \u2514\u2500\u2500 \ud83d\udcc1 package/\n</code></pre></p> mkdocs.yml<pre><code>plugins:\n- mkdocstrings:\nhandlers:\npython:\npaths: [src]\n</code></pre> </li> <li> <p>mkdocs.yml in subfolder, package in root     <pre><code>\ud83d\udcc1 root/\n\u251c\u2500\u2500 \ud83d\udcc1 docs/\n\u2502   \u2514\u2500\u2500 \ud83d\udcc4 mkdocs.yml\n\u2514\u2500\u2500 \ud83d\udcc1 package/\n</code></pre></p> mkdocs.yml<pre><code>plugins:\n- mkdocstrings:\nhandlers:\npython:\npaths: [..]\n</code></pre> </li> <li> <p>mkdocs.yml in subfolder, package in subfolder     <pre><code>\ud83d\udcc1 root/\n\u251c\u2500\u2500 \ud83d\udcc1 docs/\n\u2502   \u2514\u2500\u2500 \ud83d\udcc4 mkdocs.yml\n\u2514\u2500\u2500 \ud83d\udcc1 src/\n    \u2514\u2500\u2500 \ud83d\udcc1 package/\n</code></pre></p> mkdocs.yml<pre><code>plugins:\n- mkdocstrings:\nhandlers:\npython:\npaths: [../src]\n</code></pre> </li> </ol> <p>Except for case 1, which is supported by default, we strongly recommend setting the path to your packages using this option, even if it works without it (for example because your project manager automatically adds <code>src</code> to PYTHONPATH), to make sure anyone can build your docs from any location on their filesystem.</p>"},{"location":"usage/#using-the-pythonpath-environment-variable","title":"Using the PYTHONPATH environment variable","text":"<p>This method has limitations.</p> <p>This method might work for you, with your current setup, but not for others trying your build your docs with their own setup/environment. We recommend using the <code>paths</code> method instead.</p> <p>You can take advantage of the usual Python loading mechanisms. In Bash and other shells, you can run your command like this (note the prepended <code>PYTHONPATH=...</code>):</p> <ol> <li> <p>mkdocs.yml in root, package in root     <pre><code>\ud83d\udcc1 root/\n\u251c\u2500\u2500 \ud83d\udcc4 mkdocs.yml\n\u2514\u2500\u2500 \ud83d\udcc1 package/\n</code></pre></p> <pre><code>PYTHONPATH=. mkdocs build  # actually not needed, default\n</code></pre> </li> <li> <p>mkdocs.yml in root, package in subfolder     <pre><code>\ud83d\udcc1 root/\n\u251c\u2500\u2500 \ud83d\udcc4 mkdocs.yml\n\u2514\u2500\u2500 \ud83d\udcc1 src/\n    \u2514\u2500\u2500 \ud83d\udcc1 package/\n</code></pre></p> <pre><code>PYTHONPATH=src mkdocs build\n</code></pre> </li> <li> <p>mkdocs.yml in subfolder, package in root     <pre><code>\ud83d\udcc1 root/\n\u251c\u2500\u2500 \ud83d\udcc1 docs/\n\u2502   \u2514\u2500\u2500 \ud83d\udcc4 mkdocs.yml\n\u2514\u2500\u2500 \ud83d\udcc1 package/\n</code></pre></p> <pre><code>PYTHONPATH=. mkdocs build -f docs/mkdocs.yml\n</code></pre> </li> <li> <p>mkdocs.yml in subfolder, package in subfolder     <pre><code>\ud83d\udcc1 root/\n\u251c\u2500\u2500 \ud83d\udcc1 docs/\n\u2502   \u2514\u2500\u2500 \ud83d\udcc4 mkdocs.yml\n\u2514\u2500\u2500 \ud83d\udcc1 src/\n    \u2514\u2500\u2500 \ud83d\udcc1 package/\n</code></pre></p> <pre><code>PYTHONPATH=src mkdocs build -f docs/mkdocs.yml\n</code></pre> </li> </ol>"},{"location":"usage/#installing-your-package-in-the-current-python-environment","title":"Installing your package in the current Python environment","text":"<p>This method has limitations.</p> <p>This method might work for you, with your current setup, but not for others trying your build your docs with their own setup/environment. We recommend using the <code>paths</code> method instead.</p> <p>Install your package in the current environment, and run MkDocs:</p> pipPDMPoetry <pre><code>. venv/bin/activate\npip install -e .\nmkdocs build\n</code></pre> <pre><code>pdm install\npdm run mkdocs build\n</code></pre> <pre><code>poetry install\npoetry run mkdocs build\n</code></pre>"},{"location":"reference/mkdocstrings_handlers/python/","title":"python","text":"<p>This package implements a handler for the Python language.</p>"},{"location":"reference/mkdocstrings_handlers/python/#mkdocstrings_handlers.python.get_handler","title":"get_handler","text":"<pre><code>get_handler(\n    theme,\n    custom_templates=None,\n    config_file_path=None,\n    paths=None,\n    **config\n)\n</code></pre> <p>Simply return an instance of <code>PythonHandler</code>.</p> <p>Parameters:</p> Name Type Description Default <code>theme</code> <code>str</code> <p>The theme to use when rendering contents.</p> required <code>custom_templates</code> <code>str | None</code> <p>Directory containing custom templates.</p> <code>None</code> <code>config_file_path</code> <code>str | None</code> <p>The MkDocs configuration file path.</p> <code>None</code> <code>paths</code> <code>list[str] | None</code> <p>A list of paths to use as Griffe search paths.</p> <code>None</code> <code>**config</code> <code>Any</code> <p>Configuration passed to the handler.</p> <code>{}</code> <p>Returns:</p> Type Description <code>PythonHandler</code> <p>An instance of <code>PythonHandler</code>.</p>"},{"location":"reference/mkdocstrings_handlers/python/handler/","title":"handler","text":"<p>This module implements a handler for the Python language.</p>"},{"location":"reference/mkdocstrings_handlers/python/handler/#mkdocstrings_handlers.python.handler.PythonHandler","title":"PythonHandler","text":"<pre><code>PythonHandler(\n    *args, config_file_path=None, paths=None, **kwargs\n)\n</code></pre> <p>         Bases: <code>BaseHandler</code></p> <p>The Python handler class.</p> <p>Attributes:</p> Name Type Description <code>domain</code> <code>str</code> <p>The cross-documentation domain/language for this handler.</p> <code>enable_inventory</code> <code>bool</code> <p>Whether this handler is interested in enabling the creation of the <code>objects.inv</code> Sphinx inventory file.</p> <code>fallback_theme</code> <p>The fallback theme.</p> <code>fallback_config</code> <code>dict</code> <p>The configuration used to collect item during autorefs fallback.</p> <code>default_config</code> <code>dict</code> <p>The default rendering options, see <code>default_config</code>.</p> <p>Parameters:</p> Name Type Description Default <code>*args</code> <code>Any</code> <p>Handler name, theme and custom templates.</p> <code>()</code> <code>config_file_path</code> <code>str | None</code> <p>The MkDocs configuration file path.</p> <code>None</code> <code>paths</code> <code>list[str] | None</code> <p>A list of paths to use as Griffe search paths.</p> <code>None</code> <code>**kwargs</code> <code>Any</code> <p>Same thing, but with keyword arguments.</p> <code>{}</code>"},{"location":"reference/mkdocstrings_handlers/python/handler/#mkdocstrings_handlers.python.handler.PythonHandler.default_config","title":"default_config  <code>class-attribute</code>","text":"<pre><code>default_config: dict = {\n    \"docstring_style\": \"google\",\n    \"docstring_options\": {},\n    \"show_root_heading\": False,\n    \"show_root_toc_entry\": True,\n    \"show_root_full_path\": True,\n    \"show_root_members_full_path\": False,\n    \"show_object_full_path\": False,\n    \"show_category_heading\": False,\n    \"show_if_no_docstring\": False,\n    \"show_signature\": True,\n    \"show_signature_annotations\": False,\n    \"separate_signature\": False,\n    \"line_length\": 60,\n    \"merge_init_into_class\": False,\n    \"show_docstring_attributes\": True,\n    \"show_docstring_description\": True,\n    \"show_docstring_examples\": True,\n    \"show_docstring_other_parameters\": True,\n    \"show_docstring_parameters\": True,\n    \"show_docstring_raises\": True,\n    \"show_docstring_receives\": True,\n    \"show_docstring_returns\": True,\n    \"show_docstring_warns\": True,\n    \"show_docstring_yields\": True,\n    \"show_source\": True,\n    \"show_bases\": True,\n    \"show_submodules\": False,\n    \"group_by_category\": True,\n    \"heading_level\": 2,\n    \"members_order\": rendering.Order.alphabetical.value,\n    \"docstring_section_style\": \"table\",\n    \"members\": None,\n    \"filters\": [\"!^_[^_]\"],\n    \"annotations_path\": \"brief\",\n    \"preload_modules\": None,\n    \"load_external_modules\": False,\n}\n</code></pre> <p>Headings options:</p> Name Type Description <code>heading_level</code> <code>int</code> <p>The initial heading level to use. Default: <code>2</code>.</p> <code>show_root_heading</code> <code>bool</code> <p>Show the heading of the object at the root of the documentation tree (i.e. the object referenced by the identifier after <code>:::</code>). Default: <code>False</code>.</p> <code>show_root_toc_entry</code> <code>bool</code> <p>If the root heading is not shown, at least add a ToC entry for it. Default: <code>True</code>.</p> <code>show_root_full_path</code> <code>bool</code> <p>Show the full Python path for the root object heading. Default: <code>True</code>.</p> <code>show_root_members_full_path</code> <code>bool</code> <p>Show the full Python path of the root members. Default: <code>False</code>.</p> <code>show_object_full_path</code> <code>bool</code> <p>Show the full Python path of every object. Default: <code>False</code>.</p> <code>show_category_heading</code> <code>bool</code> <p>When grouped by categories, show a heading for each category. Default: <code>False</code>.</p> <p>Members options:</p> Name Type Description <code>members</code> <code>list[str] | False | None</code> <p>An explicit list of members to render. Default: <code>None</code>.</p> <code>members_order</code> <code>str</code> <p>The members ordering to use. Options: <code>alphabetical</code> - order by the members names, <code>source</code> - order members as they appear in the source file. Default: <code>\"alphabetical\"</code>.</p> <code>filters</code> <code>list[str] | None</code> <p>A list of filters applied to filter objects based on their name. A filter starting with <code>!</code> will exclude matching objects instead of including them. The <code>members</code> option takes precedence over <code>filters</code> (filters will still be applied recursively to lower members in the hierarchy). Default: <code>[\"!^_[^_]\"]</code>.</p> <code>group_by_category</code> <code>bool</code> <p>Group the object's children by categories: attributes, classes, functions, and modules. Default: <code>True</code>.</p> <code>show_submodules</code> <code>bool</code> <p>When rendering a module, show its submodules recursively. Default: <code>False</code>.</p> <p>Docstrings options:</p> Name Type Description <code>docstring_style</code> <code>str</code> <p>The docstring style to use: <code>google</code>, <code>numpy</code>, <code>sphinx</code>, or <code>None</code>. Default: <code>\"google\"</code>.</p> <code>docstring_options</code> <code>dict</code> <p>The options for the docstring parser. See parsers under <code>griffe.docstrings</code>.</p> <code>docstring_section_style</code> <code>str</code> <p>The style used to render docstring sections. Options: <code>table</code>, <code>list</code>, <code>spacy</code>. Default: <code>\"table\"</code>.</p> <code>line_length</code> <code>int</code> <p>Maximum line length when formatting code/signatures. Default: <code>60</code>.</p> <code>merge_init_into_class</code> <code>bool</code> <p>Whether to merge the <code>__init__</code> method into the class' signature and docstring. Default: <code>False</code>.</p> <code>show_if_no_docstring</code> <code>bool</code> <p>Show the object heading even if it has no docstring or children with docstrings. Default: <code>False</code>.</p> <code>show_docstring_attributes</code> <code>bool</code> <p>Whether to display the \"Attributes\" section in the object's docstring. Default: <code>True</code>.</p> <code>show_docstring_description</code> <code>bool</code> <p>Whether to display the textual block (including admonitions) in the object's docstring. Default: <code>True</code>.</p> <code>show_docstring_examples</code> <code>bool</code> <p>Whether to display the \"Examples\" section in the object's docstring. Default: <code>True</code>.</p> <code>show_docstring_other_parameters</code> <code>bool</code> <p>Whether to display the \"Other Parameters\" section in the object's docstring. Default: <code>True</code>.</p> <code>show_docstring_parameters</code> <code>bool</code> <p>Whether to display the \"Parameters\" section in the object's docstring. Default: <code>True</code>.</p> <code>show_docstring_raises</code> <code>bool</code> <p>Whether to display the \"Raises\" section in the object's docstring. Default: <code>True</code>.</p> <code>show_docstring_receives</code> <code>bool</code> <p>Whether to display the \"Receives\" section in the object's docstring. Default: <code>True</code>.</p> <code>show_docstring_returns</code> <code>bool</code> <p>Whether to display the \"Returns\" section in the object's docstring. Default: <code>True</code>.</p> <code>show_docstring_warns</code> <code>bool</code> <p>Whether to display the \"Warns\" section in the object's docstring. Default: <code>True</code>.</p> <code>show_docstring_yields</code> <code>bool</code> <p>Whether to display the \"Yields\" section in the object's docstring. Default: <code>True</code>.</p> <p>Signatures/annotations options:</p> Name Type Description <code>annotations_path</code> <code>str</code> <p>The verbosity for annotations path: <code>brief</code> (recommended), or <code>source</code> (as written in the source). Default: <code>\"brief\"</code>.</p> <code>show_signature</code> <code>bool</code> <p>Show methods and functions signatures. Default: <code>True</code>.</p> <code>show_signature_annotations</code> <code>bool</code> <p>Show the type annotations in methods and functions signatures. Default: <code>False</code>.</p> <code>separate_signature</code> <code>bool</code> <p>Whether to put the whole signature in a code block below the heading. If Black is installed, the signature is also formatted using it. Default: <code>False</code>.</p> <p>Additional options:</p> Name Type Description <code>show_bases</code> <code>bool</code> <p>Show the base classes of a class. Default: <code>True</code>.</p> <code>show_source</code> <code>bool</code> <p>Show the source code of this object. Default: <code>True</code>.</p> <code>preload_modules</code> <code>list[str] | None</code> <p>Pre-load modules that are not specified directly in autodoc instructions (<code>::: identifier</code>). It is useful when you want to render documentation for a particular member of an object, and this member is imported from another package than its parent.</p> <p>For an imported member to be rendered, you need to add it to the <code>__all__</code> attribute of the importing module.</p> <p>The modules must be listed as an array of strings. Default: <code>None</code>.</p>"},{"location":"reference/mkdocstrings_handlers/python/handler/#mkdocstrings_handlers.python.handler.PythonHandler.load_inventory","title":"load_inventory  <code>classmethod</code>","text":"<pre><code>load_inventory(\n    in_file, url, base_url=None, domains=None, **kwargs\n)\n</code></pre> <p>Yield items and their URLs from an inventory file streamed from <code>in_file</code>.</p> <p>This implements mkdocstrings' <code>load_inventory</code> \"protocol\" (see <code>mkdocstrings.plugin</code>).</p> <p>Parameters:</p> Name Type Description Default <code>in_file</code> <code>BinaryIO</code> <p>The binary file-like object to read the inventory from.</p> required <code>url</code> <code>str</code> <p>The URL that this file is being streamed from (used to guess <code>base_url</code>).</p> required <code>base_url</code> <code>str | None</code> <p>The URL that this inventory's sub-paths are relative to.</p> <code>None</code> <code>domains</code> <code>list[str] | None</code> <p>A list of domain strings to filter the inventory by, when not passed, \"py\" will be used.</p> <code>None</code> <code>**kwargs</code> <code>Any</code> <p>Ignore additional arguments passed from the config.</p> <code>{}</code> <p>Yields:</p> Type Description <code>Iterator[tuple[str, str]]</code> <p>Tuples of (item identifier, item URL).</p>"},{"location":"reference/mkdocstrings_handlers/python/handler/#mkdocstrings_handlers.python.handler.get_handler","title":"get_handler","text":"<pre><code>get_handler(\n    theme,\n    custom_templates=None,\n    config_file_path=None,\n    paths=None,\n    **config\n)\n</code></pre> <p>Simply return an instance of <code>PythonHandler</code>.</p> <p>Parameters:</p> Name Type Description Default <code>theme</code> <code>str</code> <p>The theme to use when rendering contents.</p> required <code>custom_templates</code> <code>str | None</code> <p>Directory containing custom templates.</p> <code>None</code> <code>config_file_path</code> <code>str | None</code> <p>The MkDocs configuration file path.</p> <code>None</code> <code>paths</code> <code>list[str] | None</code> <p>A list of paths to use as Griffe search paths.</p> <code>None</code> <code>**config</code> <code>Any</code> <p>Configuration passed to the handler.</p> <code>{}</code> <p>Returns:</p> Type Description <code>PythonHandler</code> <p>An instance of <code>PythonHandler</code>.</p>"},{"location":"reference/mkdocstrings_handlers/python/rendering/","title":"rendering","text":"<p>This module implements rendering utilities.</p>"},{"location":"reference/mkdocstrings_handlers/python/rendering/#mkdocstrings_handlers.python.rendering.Order","title":"Order","text":"<p>         Bases: <code>enum.Enum</code></p> <p>Enumeration for the possible members ordering.</p>"},{"location":"reference/mkdocstrings_handlers/python/rendering/#mkdocstrings_handlers.python.rendering.do_crossref","title":"do_crossref","text":"<pre><code>do_crossref(path, *, brief=True)\n</code></pre> <p>Filter to create cross-references.</p> <p>Parameters:</p> Name Type Description Default <code>path</code> <code>str</code> <p>The path to link to.</p> required <code>brief</code> <code>bool</code> <p>Show only the last part of the path, add full path as hover.</p> <code>True</code> <p>Returns:</p> Type Description <code>Markup</code> <p>Markup text.</p>"},{"location":"reference/mkdocstrings_handlers/python/rendering/#mkdocstrings_handlers.python.rendering.do_filter_objects","title":"do_filter_objects","text":"<pre><code>do_filter_objects(\n    objects_dictionary,\n    *,\n    filters=None,\n    members_list=None,\n    keep_no_docstrings=True\n)\n</code></pre> <p>Filter a dictionary of objects based on their docstrings.</p> <p>Parameters:</p> Name Type Description Default <code>objects_dictionary</code> <code>dict[str, Object | Alias]</code> <p>The dictionary of objects.</p> required <code>filters</code> <code>Sequence[tuple[Pattern, bool]] | None</code> <p>Filters to apply, based on members' names. Each element is a tuple: a pattern, and a boolean indicating whether to reject the object if the pattern matches.</p> <code>None</code> <code>members_list</code> <code>list[str] | None</code> <p>An optional, explicit list of members to keep. When given and empty, return an empty list. When given and not empty, ignore filters and docstrings presence/absence.</p> <code>None</code> <code>keep_no_docstrings</code> <code>bool</code> <p>Whether to keep objects with no/empty docstrings (recursive check).</p> <code>True</code> <p>Returns:</p> Type Description <code>list[Object | Alias]</code> <p>A list of objects.</p>"},{"location":"reference/mkdocstrings_handlers/python/rendering/#mkdocstrings_handlers.python.rendering.do_format_code","title":"do_format_code","text":"<pre><code>do_format_code(code, line_length)\n</code></pre> <p>Format code using Black.</p> <p>Parameters:</p> Name Type Description Default <code>code</code> <code>str</code> <p>The code to format.</p> required <code>line_length</code> <code>int</code> <p>The line length to give to Black.</p> required <p>Returns:</p> Type Description <code>str</code> <p>The same code, formatted.</p>"},{"location":"reference/mkdocstrings_handlers/python/rendering/#mkdocstrings_handlers.python.rendering.do_format_signature","title":"do_format_signature","text":"<pre><code>do_format_signature(signature, line_length)\n</code></pre> <p>Format a signature using Black.</p> <p>Parameters:</p> Name Type Description Default <code>signature</code> <code>str</code> <p>The signature to format.</p> required <code>line_length</code> <code>int</code> <p>The line length to give to Black.</p> required <p>Returns:</p> Type Description <code>str</code> <p>The same code, formatted.</p>"},{"location":"reference/mkdocstrings_handlers/python/rendering/#mkdocstrings_handlers.python.rendering.do_multi_crossref","title":"do_multi_crossref","text":"<pre><code>do_multi_crossref(text, *, code=True)\n</code></pre> <p>Filter to create cross-references.</p> <p>Parameters:</p> Name Type Description Default <code>text</code> <code>str</code> <p>The text to scan.</p> required <code>code</code> <code>bool</code> <p>Whether to wrap the result in a code tag.</p> <code>True</code> <p>Returns:</p> Type Description <code>Markup</code> <p>Markup text.</p>"},{"location":"reference/mkdocstrings_handlers/python/rendering/#mkdocstrings_handlers.python.rendering.do_order_members","title":"do_order_members","text":"<pre><code>do_order_members(members, order, members_list)\n</code></pre> <p>Order members given an ordering method.</p> <p>Parameters:</p> Name Type Description Default <code>members</code> <code>Sequence[Object | Alias]</code> <p>The members to order.</p> required <code>order</code> <code>Order</code> <p>The ordering method.</p> required <code>members_list</code> <code>list[str] | None</code> <p>An optional member list (manual ordering).</p> required <p>Returns:</p> Type Description <code>Sequence[Object | Alias]</code> <p>The same members, ordered.</p>"},{"location":"coverage/","title":"Coverage report","text":""}]}